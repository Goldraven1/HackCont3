# Электронный журнал производства работ
# Промышленное решение для государственных контролирующих органов

# Основная конфигурация Nginx
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Оптимизация производительности
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Основные настройки
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Производительность
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Ограничения
    client_max_body_size 100m;
    client_body_buffer_size 1m;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;
    
    # Таймауты
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com https://cdn.socket.io; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://unpkg.com; img-src 'self' data: https:; font-src 'self' https://cdn.jsdelivr.net; connect-src 'self' ws: wss:; media-src 'self'; object-src 'none'; frame-src 'self';" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=files:10m rate=30r/m;
    
    # Upstream серверы
    upstream core_backend {
        least_conn;
        server core_service:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream file_backend {
        least_conn;
        server file_service:8001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream gis_backend {
        least_conn;
        server gis_service:8002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # Кеширование
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=50m inactive=10m use_temp_path=off;
    
    # Основной сервер
    server {
        listen 80;
        server_name localhost ej.local electronic-journal.local;
        
        # Перенаправление на HTTPS в продакшене
        # return 301 https://$server_name$request_uri;
        
        # Общие настройки
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Логирование для основного сервера
        access_log /var/log/nginx/main_access.log main;
        error_log /var/log/nginx/main_error.log warn;
        
        # Проверка здоровья
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Статические файлы приложения
        location / {
            try_files $uri $uri/ /index.html;
            
            # Кеширование для статических файлов
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
                access_log off;
            }
            
            # Кеширование для HTML
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # API основного сервиса
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # CORS заголовки
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            
            # Preflight запросы
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            proxy_pass http://core_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Таймауты
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Буферизация
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Аутентификация с лимитированием
        location /api/v1/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://core_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Увеличенные таймауты для аутентификации
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Файловый сервис
        location /files/ {
            limit_req zone=files burst=10 nodelay;
            
            proxy_pass http://file_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Увеличенные лимиты для файлов
            client_max_body_size 100m;
            client_body_timeout 300s;
            
            # Таймауты для загрузки файлов
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Отключаем буферизация для больших файлов
            proxy_request_buffering off;
            proxy_buffering off;
        }
        
        # GIS сервис
        location /gis/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://gis_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Кеширование для некоторых GIS запросов
            location ~* /gis/v1/(geocode|reverse-geocode) {
                proxy_cache api_cache;
                proxy_cache_valid 200 1h;
                proxy_cache_key "$scheme$request_method$host$request_uri";
                add_header X-Cache-Status $upstream_cache_status;
                
                proxy_pass http://gis_backend;
            }
        }
        
        # Django статические файлы
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            
            # Gzip для статических файлов
            gzip_static on;
        }
        
        # Django медиа файлы
        location /media/ {
            alias /usr/share/nginx/html/media/;
            expires 1d;
            add_header Cache-Control "public";
            
            # Защита от прямого доступа к приватным файлам
            location ~* /media/private/ {
                internal;
            }
        }
        
        # WebSocket для уведомлений
        location /ws/ {
            proxy_pass http://core_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для WebSocket
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Административная панель Django
        location /admin/ {
            # Ограничение доступа по IP (в продакшене)
            # allow 192.168.1.0/24;
            # deny all;
            
            proxy_pass http://core_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Мониторинг и метрики
        location /metrics {
            # Ограничение доступа для мониторинга
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker сеть
            deny all;
            
            proxy_pass http://core_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Документация API
        location /docs {
            proxy_pass http://core_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Документация файлового сервиса
        location /files/docs {
            proxy_pass http://file_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Документация GIS сервиса
        location /gis/docs {
            proxy_pass http://gis_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Скрытие системных файлов
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Блокировка доступа к файлам бэкапов и временным файлам
        location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Кастомные страницы ошибок
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # HTTPS сервер (для продакшена)
    # server {
    #     listen 443 ssl http2;
    #     server_name electronic-journal.local;
    #     
    #     # SSL сертификаты
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL настройки
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA;
    #     ssl_prefer_server_ciphers off;
    #     ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    #     
    #     # SSL оптимизация
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     ssl_session_tickets off;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # Включаем все локации как в HTTP сервере
    #     # ... (копируем все location блоки)
    # }
    
    # Сервер для мониторинга (внутренний)
    server {
        listen 8080;
        server_name localhost;
        
        access_log off;
        
        # Статус Nginx
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
        }
        
        # Простая проверка здоровья
        location /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# Настройки для потоков (если используются)
stream {
    # Логирование для потоков
    log_format stream_main '$remote_addr [$time_local] $protocol $status $bytes_sent $bytes_received $session_time';
    access_log /var/log/nginx/stream_access.log stream_main;
    
    # Пример проксирования TCP соединений (если нужно)
    # upstream database {
    #     server postgres:5432;
    # }
    # 
    # server {
    #     listen 5432;
    #     proxy_pass database;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    # }
}
